
INTERSECT: --> find the rows common in the result of two queries. Remove duplicates.

(SELECT * FROM products order BY price desc LIMIT 5)
INTERSECT
(SELECT * FROM products order BY price/weight);

-------------------------------------------------------------------------------------------------------------------------------------

EXCEPT: --> find the rows that are present in first query but not in second query. Remove duplicates.

(SELECT * FROM products order BY price desc LIMIT 5)
EXCEPT
(SELECT * FROM products order BY price/weight desc LIMIT 5);

-------------------------------------------------------------------------------------------------------------------------------------

Subquery:

SELECT name, price FROM products WHERE price > (SELECT MAX(price) FROM products WHERE department = 'Toys');

SELECT name, price, (SELECT price FROM products WHERE id = 3) FROM products WHERE price > 876;

SELECT name, price_weight FROM (SELECT name, price / weight AS price_weight FROM products) AS p WHERE price_weight > 300;

SELECT * FROM (SELECT MAX(price) AS max_price FROM products) AS p;

SELECT MAX(avg_price) AS max_avg_price FROM (SELECT AVG(price) AS avg_price FROM phones GROUP BY manufacturer) AS p;

SELECT first_name FROM users JOIN ( SELECT user_id FROM orders WHERE product_id = 3 ) AS o ON o.user_id = users.id;

SELECT id FROM orders WHERE product_id IN (SELECT id FROM products WHERE price / weight > 50);

SELECT name FROM products WHERE department NOT IN (SELECT department FROM products WHERE price < 100);